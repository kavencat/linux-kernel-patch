# This is a basic workflow to help you get started with Actions

name: Get patch

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  gitpatch:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: SET config
        run: |
          echo "KERNEL_SOURCE=$(cat config.env | grep "KERNEL_SOURCE" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
          echo "KERNEL_SOURCE_BRANCH=$(cat config.env | grep "KERNEL_SOURCE_BRANCH" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
          echo "START_COMMIT=$(cat config.env | grep "START_COMMIT" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV

      # Runs a single command using the runners shell
      - name: Update and Upgrade system
        run: |
          echo "BUILD_TIME=$(TZ=Asia/Shanghai date "+%Y%m%d%H%M")" >> $GITHUB_ENV
          sudo sed -i 's/azure.archive.ubuntu.com/mirrors.ustc.edu.cn/' /etc/apt/sources.list
          sudo sed -i 's/http:/https:/' /etc/apt/sources.list
          sudo apt update
          sudo apt install git zip

      # Runs a set of commands using the runners shell
      - name: Git kernel linux 4.19-y
        run: |
          git clone ${{ env.KERNEL_SOURCE }} -b ${{ env.KERNEL_SOURCE_BRANCH }}
          mkdir patch
          cd linux
          git format-patch ${{ env.START_COMMIT }}
          cp *.patch ../patch/
          cd ..
          
      - name: zip ${{ env.UPLOADNAME }}
        run: |
          cd kernel_workspace/patch/
          zip -q -r ${{ env.UPLOADNAME }}.zip *
      
      - name: Create Release and Upload Release Asset
        uses: phuonghuynh/action-gh-release@master
        if: startsWith(${{ env.UPLOADNAME }}, 'refs/tags/')
        env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
           tag_name: ${{ env.UPLOADNAME }}
           name: ${{ env.UPLOADNAME }}
           body: ${{ env.UPLOADNAME }}
           draft: false
           prerelease: false
           files: |
             kernel_workspace/patch/${{ env.UPLOADNAME }}.zip
          
      - name: Upload Patch
        uses: actions/upload-artifact@v3.1.2
        with:
          name: Patch-${{ env.BUILD_TIME }}
          path: patch/*
