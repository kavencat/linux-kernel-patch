# This is a basic workflow to help you get started with Actions

name: Get patch

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Update and Upgrade system
        run: |
          echo "BUILD_TIME=$(TZ=Asia/Shanghai date "+%Y%m%d%H%M")" >> $GITHUB_ENV
          sudo sed -i 's/azure.archive.ubuntu.com/mirrors.ustc.edu.cn/' /etc/apt/sources.list
          sudo sed -i 's/http:/https:/' /etc/apt/sources.list
          sudo apt update
          sudo apt upgrade grub-efi-amd64-bin grub-efi-amd64-signed 
          sudo apt upgrade
          sudo apt install git 

      # Runs a set of commands using the runners shell
      - name: Git kernel linux 4.19-y and wayne 
        run: |
          git config user.name "kavencat"
          git config user.password "41804064sw"
          git config user.email "shi72425803@163.com"
          git clone https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git -b linux-4.19.y
          mkdir patch
          cd linux
          git format-patch 53b696f0584acce2e90db69272a2a11aab138370
          cp *.patch ../patch/
          cd ..
          
      - name: zip Patch
        run: |
          cd patch
          zip -q -r Patch-${{ env.BUILD_TIME }}.zip *
    
      - name: Create Release and Upload Release Asset
        uses: phuonghuynh/action-gh-release@master
        if: startsWith(Patch-${{ env.BUILD_TIME }}, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: Patch-${{ env.BUILD_TIME }}
          name: Patch-${{ env.BUILD_TIME }}
          body: 'add Patch-${{ env.BUILD_TIME }}'
          draft: false
          prerelease: false
          files: |
             tequila/Patch-${{ env.BUILD_TIME }}.zip
